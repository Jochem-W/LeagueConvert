name: CI

on:
  push:
  pull_request:
  release:
    types:
      - created

jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: Install .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "7.0.x"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish generic
        run: dotnet.exe publish LeagueConvert.CommandLine -c Release

      - name: Publish win-x64
        run: dotnet.exe publish LeagueConvert.CommandLine -c Release -r win-x64 --no-self-contained -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true

      - name: Publish win-x86
        run: dotnet.exe publish LeagueConvert.CommandLine -c Release -r win-x86 --no-self-contained -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true
        
      - name: Publish linux-arm64
        run: dotnet.exe publish LeagueConvert.CommandLine -c Release -r linux-arm64 --no-self-contained -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true
        
      - name: Publish linux-musl-x64
        run: dotnet.exe publish LeagueConvert.CommandLine -c Release -r linux-musl-x64 --no-self-contained -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true
        
      - name: Publish linux-x64
        run: dotnet.exe publish LeagueConvert.CommandLine -c Release -r linux-x64 --no-self-contained -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true

      - name: Publish osx-x64
        run: dotnet.exe publish LeagueConvert.CommandLine -c Release -r osx-x64 --no-self-contained -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true

      - name: Get short SHA
        run: Write-Output "name=$($Env:GITHUB_SHA.SubString(0,7))" | Out-File -FilePath $env:GITHUB_ENV -Append;

      - name: Upload generic build artifact
        uses: actions/upload-artifact@v3
        with:
          name: LeagueConvert.CommandLine-${{ env.name }}-generic
          path: LeagueConvert.CommandLine/bin/Release/net7.0/publish

      - name: Upload win-x64 build artifact
        uses: actions/upload-artifact@v3
        with:
          name: LeagueConvert.CommandLine-${{ env.name }}-win-x64
          path: LeagueConvert.CommandLine/bin/Release/net7.0/win-x64/publish

      - name: Upload win-x86 build artifact
        uses: actions/upload-artifact@v3
        with:
          name: LeagueConvert.CommandLine-${{ env.name }}-win-x86
          path: LeagueConvert.CommandLine/bin/Release/net7.0/win-x86/publish

      - name: Upload linux-arm64 build artifact
        uses: actions/upload-artifact@v3
        with:
          name: LeagueConvert.CommandLine-${{ env.name }}-linux-arm64
          path: LeagueConvert.CommandLine/bin/Release/net7.0/linux-arm64/publish
          
      - name: Upload linux-musl-x64 build artifact
        uses: actions/upload-artifact@v3
        with:
          name: LeagueConvert.CommandLine-${{ env.name }}-linux-musl-x64
          path: LeagueConvert.CommandLine/bin/Release/net7.0/linux-musl-x64/publish
      
      - name: Upload linux-x64 build artifact
        uses: actions/upload-artifact@v3
        with:
          name: LeagueConvert.CommandLine-${{ env.name }}-linux-x64
          path: LeagueConvert.CommandLine/bin/Release/net7.0/linux-x64/publish
      
      - name: Upload osx-x64 build artifact
        uses: actions/upload-artifact@v3
        with:
          name: LeagueConvert.CommandLine-${{ env.name }}-osx-x64
          path: LeagueConvert.CommandLine/bin/Release/net7.0/osx-x64/publish
